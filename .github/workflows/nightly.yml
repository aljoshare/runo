name: nightly

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  coverage:
    name: Check test coverage with tarpaulin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: "kind"
      - name: "Apply RBAC resources"
        run: kubectl apply -k rbac
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-tarpaulin
          version: latest
      - run: cargo tarpaulin --timeout 300 -o Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml
  build:
    name: Build a nightly version of runo
    runs-on: ubuntu-latest
    needs: coverage
    strategy:
      fail-fast: false
      matrix:
        recipe:
          - { target: aarch64-unknown-linux-gnu, platform: linux/arm64 }
          - { target: x86_64-unknown-linux-gnu, platform: linux/amd64 }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.recipe.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.recipe.target }}
      - name: Rename binary
        run: cp target/${{ matrix.recipe.target }}/debug/runo ${{ matrix.recipe.target }}
      - name: Generate checksum
        run: |
          sha256sum ${{ matrix.recipe.target }} > checksum.txt
      - name: Archive checksum.txt
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.recipe.target }}-checksum
          path: checksum.txt
          retention-days: 30
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.recipe.target }}
          path: target/${{ matrix.recipe.target }}/debug/runo
          retention-days: 5
  image:
    name: Build and push image
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        recipe:
          - { target: aarch64-unknown-linux-gnu, platform: linux/arm64 }
          - { target: x86_64-unknown-linux-gnu, platform: linux/amd64 }
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Debug
        run: |
          echo "github.ref -> {{ github.ref }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.recipe.target }}
      - name: Build and push image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.recipe.platform }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}" 
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    needs:
      - image
    permissions:
        contents: read
        packages: write
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{sha}}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)
      - name: Download checksum folders
        uses: actions/download-artifact@v4
      - name: Merge checksum.txt files
        run: for i in  *-checksum ; do cat $i/checksum.txt >> checksums.txt; done
      - name: Upload checksums.txt
        uses: actions/upload-artifact@v4
        with:
          name: checksums
          path: checksums.txt
          if-no-files-found: error
          retention-days: 5
      
